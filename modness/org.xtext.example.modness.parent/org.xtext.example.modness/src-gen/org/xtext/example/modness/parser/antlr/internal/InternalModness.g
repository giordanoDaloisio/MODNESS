/*
 * generated by Xtext 2.35.0.M1
 */
grammar InternalModness;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.modness.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.modness.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.modness.services.ModnessGrammarAccess;

}

@parser::members {

 	private ModnessGrammarAccess grammarAccess;

    public InternalModnessParser(TokenStream input, ModnessGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "GroupBias";
   	}

   	@Override
   	protected ModnessGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGroupBias
entryRuleGroupBias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupBiasRule()); }
	iv_ruleGroupBias=ruleGroupBias
	{ $current=$iv_ruleGroupBias.current; }
	EOF;

// Rule GroupBias
ruleGroupBias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GroupBias'
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupBiasAccess().getGroupBiasKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupBiasAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGroupBiasAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='domain'
		{
			newLeafNode(otherlv_3, grammarAccess.getGroupBiasAccess().getDomainKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupBiasAccess().getDomainEStringParserRuleCall_4_0());
				}
				lv_domain_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
					}
					set(
						$current,
						"domain",
						lv_domain_4_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='source'
		{
			newLeafNode(otherlv_5, grammarAccess.getGroupBiasAccess().getSourceKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getGroupBiasAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupBiasAccess().getSourceBiasSourceEnumRuleCall_7_0());
				}
				lv_source_7_0=ruleBiasSource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
					}
					add(
						$current,
						"source",
						lv_source_7_0,
						"org.xtext.example.modness.Modness.BiasSource");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getGroupBiasAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupBiasAccess().getSourceBiasSourceEnumRuleCall_8_1_0());
					}
					lv_source_9_0=ruleBiasSource
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
						}
						add(
							$current,
							"source",
							lv_source_9_0,
							"org.xtext.example.modness.Modness.BiasSource");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getGroupBiasAccess().getRightCurlyBracketKeyword_9());
		}
		otherlv_11='sensitiveVariables'
		{
			newLeafNode(otherlv_11, grammarAccess.getGroupBiasAccess().getSensitiveVariablesKeyword_10());
		}
		otherlv_12='{'
		{
			newLeafNode(otherlv_12, grammarAccess.getGroupBiasAccess().getLeftCurlyBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupBiasAccess().getSensitiveVariablesSensitiveVariableParserRuleCall_12_0());
				}
				lv_sensitiveVariables_13_0=ruleSensitiveVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
					}
					add(
						$current,
						"sensitiveVariables",
						lv_sensitiveVariables_13_0,
						"org.xtext.example.modness.Modness.SensitiveVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_14=','
			{
				newLeafNode(otherlv_14, grammarAccess.getGroupBiasAccess().getCommaKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupBiasAccess().getSensitiveVariablesSensitiveVariableParserRuleCall_13_1_0());
					}
					lv_sensitiveVariables_15_0=ruleSensitiveVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
						}
						add(
							$current,
							"sensitiveVariables",
							lv_sensitiveVariables_15_0,
							"org.xtext.example.modness.Modness.SensitiveVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getGroupBiasAccess().getRightCurlyBracketKeyword_14());
		}
		otherlv_17='positiveOutcome'
		{
			newLeafNode(otherlv_17, grammarAccess.getGroupBiasAccess().getPositiveOutcomeKeyword_15());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupBiasAccess().getPositiveOutcomePositiveOutcomeParserRuleCall_16_0());
				}
				lv_positiveOutcome_18_0=rulePositiveOutcome
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
					}
					set(
						$current,
						"positiveOutcome",
						lv_positiveOutcome_18_0,
						"org.xtext.example.modness.Modness.PositiveOutcome");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_19='unprivilegedGroup'
		{
			newLeafNode(otherlv_19, grammarAccess.getGroupBiasAccess().getUnprivilegedGroupKeyword_17());
		}
		otherlv_20='{'
		{
			newLeafNode(otherlv_20, grammarAccess.getGroupBiasAccess().getLeftCurlyBracketKeyword_18());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupBiasAccess().getUnprivilegedGroupSensitiveGroupParserRuleCall_19_0());
				}
				lv_unprivilegedGroup_21_0=ruleSensitiveGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
					}
					add(
						$current,
						"unprivilegedGroup",
						lv_unprivilegedGroup_21_0,
						"org.xtext.example.modness.Modness.SensitiveGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_22=','
			{
				newLeafNode(otherlv_22, grammarAccess.getGroupBiasAccess().getCommaKeyword_20_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupBiasAccess().getUnprivilegedGroupSensitiveGroupParserRuleCall_20_1_0());
					}
					lv_unprivilegedGroup_23_0=ruleSensitiveGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
						}
						add(
							$current,
							"unprivilegedGroup",
							lv_unprivilegedGroup_23_0,
							"org.xtext.example.modness.Modness.SensitiveGroup");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_24='}'
		{
			newLeafNode(otherlv_24, grammarAccess.getGroupBiasAccess().getRightCurlyBracketKeyword_21());
		}
		otherlv_25='privilegedGroup'
		{
			newLeafNode(otherlv_25, grammarAccess.getGroupBiasAccess().getPrivilegedGroupKeyword_22());
		}
		otherlv_26='{'
		{
			newLeafNode(otherlv_26, grammarAccess.getGroupBiasAccess().getLeftCurlyBracketKeyword_23());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupBiasAccess().getPrivilegedGroupSensitiveGroupParserRuleCall_24_0());
				}
				lv_privilegedGroup_27_0=ruleSensitiveGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
					}
					add(
						$current,
						"privilegedGroup",
						lv_privilegedGroup_27_0,
						"org.xtext.example.modness.Modness.SensitiveGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_28=','
			{
				newLeafNode(otherlv_28, grammarAccess.getGroupBiasAccess().getCommaKeyword_25_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupBiasAccess().getPrivilegedGroupSensitiveGroupParserRuleCall_25_1_0());
					}
					lv_privilegedGroup_29_0=ruleSensitiveGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
						}
						add(
							$current,
							"privilegedGroup",
							lv_privilegedGroup_29_0,
							"org.xtext.example.modness.Modness.SensitiveGroup");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_30='}'
		{
			newLeafNode(otherlv_30, grammarAccess.getGroupBiasAccess().getRightCurlyBracketKeyword_26());
		}
		otherlv_31='analysis'
		{
			newLeafNode(otherlv_31, grammarAccess.getGroupBiasAccess().getAnalysisKeyword_27());
		}
		otherlv_32='{'
		{
			newLeafNode(otherlv_32, grammarAccess.getGroupBiasAccess().getLeftCurlyBracketKeyword_28());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupBiasAccess().getAnalysisGroupAnalysisParserRuleCall_29_0());
				}
				lv_analysis_33_0=ruleGroupAnalysis
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
					}
					add(
						$current,
						"analysis",
						lv_analysis_33_0,
						"org.xtext.example.modness.Modness.GroupAnalysis");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_34=','
			{
				newLeafNode(otherlv_34, grammarAccess.getGroupBiasAccess().getCommaKeyword_30_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupBiasAccess().getAnalysisGroupAnalysisParserRuleCall_30_1_0());
					}
					lv_analysis_35_0=ruleGroupAnalysis
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupBiasRule());
						}
						add(
							$current,
							"analysis",
							lv_analysis_35_0,
							"org.xtext.example.modness.Modness.GroupAnalysis");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_36='}'
		{
			newLeafNode(otherlv_36, grammarAccess.getGroupBiasAccess().getRightCurlyBracketKeyword_31());
		}
		otherlv_37='}'
		{
			newLeafNode(otherlv_37, grammarAccess.getGroupBiasAccess().getRightCurlyBracketKeyword_32());
		}
	)
;

// Entry rule entryRuleEqualityOperator
entryRuleEqualityOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityOperatorRule()); }
	iv_ruleEqualityOperator=ruleEqualityOperator
	{ $current=$iv_ruleEqualityOperator.current; }
	EOF;

// Rule EqualityOperator
ruleEqualityOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityOperatorAccess().getSingleOperatorParserRuleCall_0());
		}
		this_SingleOperator_0=ruleSingleOperator
		{
			$current = $this_SingleOperator_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEqualityOperatorAccess().getRangeOperatorParserRuleCall_1());
		}
		this_RangeOperator_1=ruleRangeOperator
		{
			$current = $this_RangeOperator_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getOperationParserRuleCall_0());
		}
		this_Operation_0=ruleOperation
		{
			$current = $this_Operation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getProbabilityParserRuleCall_1());
		}
		this_Probability_1=ruleProbability
		{
			$current = $this_Probability_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getExpectedValueParserRuleCall_2());
		}
		this_ExpectedValue_2=ruleExpectedValue
		{
			$current = $this_ExpectedValue_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getGroupSizeParserRuleCall_3());
		}
		this_GroupSize_3=ruleGroupSize
		{
			$current = $this_GroupSize_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getDatasetSizeParserRuleCall_4());
		}
		this_DatasetSize_4=ruleDatasetSize
		{
			$current = $this_DatasetSize_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getLogaritmParserRuleCall_5());
		}
		this_Logaritm_5=ruleLogaritm
		{
			$current = $this_Logaritm_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getSummationParserRuleCall_6());
		}
		this_Summation_6=ruleSummation
		{
			$current = $this_Summation_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getExistingGroupFairnessMetricParserRuleCall_7());
		}
		this_ExistingGroupFairnessMetric_7=ruleExistingGroupFairnessMetric
		{
			$current = $this_ExistingGroupFairnessMetric_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getExistingIndividualFairnessMetricParserRuleCall_8());
		}
		this_ExistingIndividualFairnessMetric_8=ruleExistingIndividualFairnessMetric
		{
			$current = $this_ExistingIndividualFairnessMetric_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVariableValue
entryRuleVariableValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableValueRule()); }
	iv_ruleVariableValue=ruleVariableValue
	{ $current=$iv_ruleVariableValue.current; }
	EOF;

// Rule VariableValue
ruleVariableValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVariableValueAccess().getVariableValue_ImplParserRuleCall_0());
		}
		this_VariableValue_Impl_0=ruleVariableValue_Impl
		{
			$current = $this_VariableValue_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVariableValueAccess().getDatasetPositiveOutcomeParserRuleCall_1());
		}
		this_DatasetPositiveOutcome_1=ruleDatasetPositiveOutcome
		{
			$current = $this_DatasetPositiveOutcome_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVariableValueAccess().getDatasetSensitiveVariableValueParserRuleCall_2());
		}
		this_DatasetSensitiveVariableValue_2=ruleDatasetSensitiveVariableValue
		{
			$current = $this_DatasetSensitiveVariableValue_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSensitiveVariable
entryRuleSensitiveVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensitiveVariableRule()); }
	iv_ruleSensitiveVariable=ruleSensitiveVariable
	{ $current=$iv_ruleSensitiveVariable.current; }
	EOF;

// Rule SensitiveVariable
ruleSensitiveVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SensitiveVariable'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensitiveVariableAccess().getSensitiveVariableKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensitiveVariableAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensitiveVariableRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensitiveVariableAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='sensitiveVariableValue'
		{
			newLeafNode(otherlv_3, grammarAccess.getSensitiveVariableAccess().getSensitiveVariableValueKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getSensitiveVariableAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensitiveVariableAccess().getSensitiveVariableValueSensitiveVariableValueParserRuleCall_5_0());
				}
				lv_sensitiveVariableValue_5_0=ruleSensitiveVariableValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensitiveVariableRule());
					}
					add(
						$current,
						"sensitiveVariableValue",
						lv_sensitiveVariableValue_5_0,
						"org.xtext.example.modness.Modness.SensitiveVariableValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getSensitiveVariableAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensitiveVariableAccess().getSensitiveVariableValueSensitiveVariableValueParserRuleCall_6_1_0());
					}
					lv_sensitiveVariableValue_7_0=ruleSensitiveVariableValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensitiveVariableRule());
						}
						add(
							$current,
							"sensitiveVariableValue",
							lv_sensitiveVariableValue_7_0,
							"org.xtext.example.modness.Modness.SensitiveVariableValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getSensitiveVariableAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSensitiveVariableAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRulePositiveOutcome
entryRulePositiveOutcome returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPositiveOutcomeRule()); }
	iv_rulePositiveOutcome=rulePositiveOutcome
	{ $current=$iv_rulePositiveOutcome.current; }
	EOF;

// Rule PositiveOutcome
rulePositiveOutcome returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PositiveOutcome'
		{
			newLeafNode(otherlv_0, grammarAccess.getPositiveOutcomeAccess().getPositiveOutcomeKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPositiveOutcomeAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='value'
		{
			newLeafNode(otherlv_2, grammarAccess.getPositiveOutcomeAccess().getValueKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPositiveOutcomeAccess().getValueEStringParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPositiveOutcomeRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPositiveOutcomeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSensitiveGroup
entryRuleSensitiveGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensitiveGroupRule()); }
	iv_ruleSensitiveGroup=ruleSensitiveGroup
	{ $current=$iv_ruleSensitiveGroup.current; }
	EOF;

// Rule SensitiveGroup
ruleSensitiveGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SensitiveGroup'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensitiveGroupAccess().getSensitiveGroupKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensitiveGroupAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensitiveGroupRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensitiveGroupAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='sensitiveValue'
		{
			newLeafNode(otherlv_3, grammarAccess.getSensitiveGroupAccess().getSensitiveValueKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getSensitiveGroupAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensitiveGroupRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSensitiveGroupAccess().getSensitiveValueSensitiveVariableValueCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getSensitiveGroupAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensitiveGroupRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSensitiveGroupAccess().getSensitiveValueSensitiveVariableValueCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getSensitiveGroupAccess().getRightParenthesisKeyword_7());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSensitiveGroupAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleGroupAnalysis
entryRuleGroupAnalysis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupAnalysisRule()); }
	iv_ruleGroupAnalysis=ruleGroupAnalysis
	{ $current=$iv_ruleGroupAnalysis.current; }
	EOF;

// Rule GroupAnalysis
ruleGroupAnalysis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GroupAnalysis'
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupAnalysisAccess().getGroupAnalysisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupAnalysisAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupAnalysisRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGroupAnalysisAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='scope'
			{
				newLeafNode(otherlv_3, grammarAccess.getGroupAnalysisAccess().getScopeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupAnalysisAccess().getScopeEStringParserRuleCall_3_1_0());
					}
					lv_scope_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupAnalysisRule());
						}
						set(
							$current,
							"scope",
							lv_scope_4_0,
							"org.xtext.example.modness.Modness.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='metric'
		{
			newLeafNode(otherlv_5, grammarAccess.getGroupAnalysisAccess().getMetricKeyword_4());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getGroupAnalysisAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupAnalysisAccess().getMetricMetricParserRuleCall_6_0());
				}
				lv_metric_7_0=ruleMetric
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupAnalysisRule());
					}
					add(
						$current,
						"metric",
						lv_metric_7_0,
						"org.xtext.example.modness.Modness.Metric");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getGroupAnalysisAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupAnalysisAccess().getMetricMetricParserRuleCall_7_1_0());
					}
					lv_metric_9_0=ruleMetric
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupAnalysisRule());
						}
						add(
							$current,
							"metric",
							lv_metric_9_0,
							"org.xtext.example.modness.Modness.Metric");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getGroupAnalysisAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_11='dataset'
		{
			newLeafNode(otherlv_11, grammarAccess.getGroupAnalysisAccess().getDatasetKeyword_9());
		}
		otherlv_12='{'
		{
			newLeafNode(otherlv_12, grammarAccess.getGroupAnalysisAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupAnalysisAccess().getDatasetDatasetParserRuleCall_11_0());
				}
				lv_dataset_13_0=ruleDataset
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupAnalysisRule());
					}
					add(
						$current,
						"dataset",
						lv_dataset_13_0,
						"org.xtext.example.modness.Modness.Dataset");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_14=','
			{
				newLeafNode(otherlv_14, grammarAccess.getGroupAnalysisAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupAnalysisAccess().getDatasetDatasetParserRuleCall_12_1_0());
					}
					lv_dataset_15_0=ruleDataset
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupAnalysisRule());
						}
						add(
							$current,
							"dataset",
							lv_dataset_15_0,
							"org.xtext.example.modness.Modness.Dataset");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getGroupAnalysisAccess().getRightCurlyBracketKeyword_13());
		}
		otherlv_17='datasetUnprivilegedGroup'
		{
			newLeafNode(otherlv_17, grammarAccess.getGroupAnalysisAccess().getDatasetUnprivilegedGroupKeyword_14());
		}
		otherlv_18='{'
		{
			newLeafNode(otherlv_18, grammarAccess.getGroupAnalysisAccess().getLeftCurlyBracketKeyword_15());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupAnalysisAccess().getDatasetUnprivilegedGroupDatasetSensitiveGroupParserRuleCall_16_0());
				}
				lv_datasetUnprivilegedGroup_19_0=ruleDatasetSensitiveGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupAnalysisRule());
					}
					add(
						$current,
						"datasetUnprivilegedGroup",
						lv_datasetUnprivilegedGroup_19_0,
						"org.xtext.example.modness.Modness.DatasetSensitiveGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_20=','
			{
				newLeafNode(otherlv_20, grammarAccess.getGroupAnalysisAccess().getCommaKeyword_17_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupAnalysisAccess().getDatasetUnprivilegedGroupDatasetSensitiveGroupParserRuleCall_17_1_0());
					}
					lv_datasetUnprivilegedGroup_21_0=ruleDatasetSensitiveGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupAnalysisRule());
						}
						add(
							$current,
							"datasetUnprivilegedGroup",
							lv_datasetUnprivilegedGroup_21_0,
							"org.xtext.example.modness.Modness.DatasetSensitiveGroup");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getGroupAnalysisAccess().getRightCurlyBracketKeyword_18());
		}
		otherlv_23='datasetPrivilegedGroup'
		{
			newLeafNode(otherlv_23, grammarAccess.getGroupAnalysisAccess().getDatasetPrivilegedGroupKeyword_19());
		}
		otherlv_24='{'
		{
			newLeafNode(otherlv_24, grammarAccess.getGroupAnalysisAccess().getLeftCurlyBracketKeyword_20());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupAnalysisAccess().getDatasetPrivilegedGroupDatasetSensitiveGroupParserRuleCall_21_0());
				}
				lv_datasetPrivilegedGroup_25_0=ruleDatasetSensitiveGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupAnalysisRule());
					}
					add(
						$current,
						"datasetPrivilegedGroup",
						lv_datasetPrivilegedGroup_25_0,
						"org.xtext.example.modness.Modness.DatasetSensitiveGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_26=','
			{
				newLeafNode(otherlv_26, grammarAccess.getGroupAnalysisAccess().getCommaKeyword_22_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupAnalysisAccess().getDatasetPrivilegedGroupDatasetSensitiveGroupParserRuleCall_22_1_0());
					}
					lv_datasetPrivilegedGroup_27_0=ruleDatasetSensitiveGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupAnalysisRule());
						}
						add(
							$current,
							"datasetPrivilegedGroup",
							lv_datasetPrivilegedGroup_27_0,
							"org.xtext.example.modness.Modness.DatasetSensitiveGroup");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_28='}'
		{
			newLeafNode(otherlv_28, grammarAccess.getGroupAnalysisAccess().getRightCurlyBracketKeyword_23());
		}
		otherlv_29='}'
		{
			newLeafNode(otherlv_29, grammarAccess.getGroupAnalysisAccess().getRightCurlyBracketKeyword_24());
		}
	)
;

// Entry rule entryRuleSensitiveVariableValue
entryRuleSensitiveVariableValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensitiveVariableValueRule()); }
	iv_ruleSensitiveVariableValue=ruleSensitiveVariableValue
	{ $current=$iv_ruleSensitiveVariableValue.current; }
	EOF;

// Rule SensitiveVariableValue
ruleSensitiveVariableValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SensitiveVariableValue'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensitiveVariableValueAccess().getSensitiveVariableValueKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSensitiveVariableValueAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='value'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensitiveVariableValueAccess().getValueKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensitiveVariableValueAccess().getValueEStringParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensitiveVariableValueRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSensitiveVariableValueAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMetric
entryRuleMetric returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetricRule()); }
	iv_ruleMetric=ruleMetric
	{ $current=$iv_ruleMetric.current; }
	EOF;

// Rule Metric
ruleMetric returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Metric'
		{
			newLeafNode(otherlv_0, grammarAccess.getMetricAccess().getMetricKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetricAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetricRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMetricAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='toleranceValue'
		{
			newLeafNode(otherlv_3, grammarAccess.getMetricAccess().getToleranceValueKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetricAccess().getToleranceValueEFloatParserRuleCall_4_0());
				}
				lv_toleranceValue_4_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetricRule());
					}
					set(
						$current,
						"toleranceValue",
						lv_toleranceValue_4_0,
						"org.xtext.example.modness.Modness.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='operator'
		{
			newLeafNode(otherlv_5, grammarAccess.getMetricAccess().getOperatorKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetricAccess().getOperatorEqualityOperatorParserRuleCall_6_0());
				}
				lv_operator_6_0=ruleEqualityOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetricRule());
					}
					set(
						$current,
						"operator",
						lv_operator_6_0,
						"org.xtext.example.modness.Modness.EqualityOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='function'
		{
			newLeafNode(otherlv_7, grammarAccess.getMetricAccess().getFunctionKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetricAccess().getFunctionFunctionParserRuleCall_8_0());
				}
				lv_function_8_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetricRule());
					}
					set(
						$current,
						"function",
						lv_function_8_0,
						"org.xtext.example.modness.Modness.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getMetricAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleDataset
entryRuleDataset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatasetRule()); }
	iv_ruleDataset=ruleDataset
	{ $current=$iv_ruleDataset.current; }
	EOF;

// Rule Dataset
ruleDataset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Dataset'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatasetAccess().getDatasetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDatasetAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='groundTruthLabelName'
			{
				newLeafNode(otherlv_3, grammarAccess.getDatasetAccess().getGroundTruthLabelNameKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDatasetAccess().getGroundTruthLabelNameEStringParserRuleCall_3_1_0());
					}
					lv_groundTruthLabelName_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDatasetRule());
						}
						set(
							$current,
							"groundTruthLabelName",
							lv_groundTruthLabelName_4_0,
							"org.xtext.example.modness.Modness.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='predictedLabelName'
			{
				newLeafNode(otherlv_5, grammarAccess.getDatasetAccess().getPredictedLabelNameKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDatasetAccess().getPredictedLabelNameEStringParserRuleCall_4_1_0());
					}
					lv_predictedLabelName_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDatasetRule());
						}
						set(
							$current,
							"predictedLabelName",
							lv_predictedLabelName_6_0,
							"org.xtext.example.modness.Modness.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='filePath'
		{
			newLeafNode(otherlv_7, grammarAccess.getDatasetAccess().getFilePathKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetAccess().getFilePathEStringParserRuleCall_6_0());
				}
				lv_filePath_8_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetRule());
					}
					set(
						$current,
						"filePath",
						lv_filePath_8_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='otherVariable'
			{
				newLeafNode(otherlv_9, grammarAccess.getDatasetAccess().getOtherVariableKeyword_7_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getDatasetAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDatasetAccess().getOtherVariableOtherVariableParserRuleCall_7_2_0());
					}
					lv_otherVariable_11_0=ruleOtherVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDatasetRule());
						}
						add(
							$current,
							"otherVariable",
							lv_otherVariable_11_0,
							"org.xtext.example.modness.Modness.OtherVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getDatasetAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDatasetAccess().getOtherVariableOtherVariableParserRuleCall_7_3_1_0());
						}
						lv_otherVariable_13_0=ruleOtherVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDatasetRule());
							}
							add(
								$current,
								"otherVariable",
								lv_otherVariable_13_0,
								"org.xtext.example.modness.Modness.OtherVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getDatasetAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_15='positiveOutcome'
		{
			newLeafNode(otherlv_15, grammarAccess.getDatasetAccess().getPositiveOutcomeKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetAccess().getPositiveOutcomeDatasetPositiveOutcomeParserRuleCall_9_0());
				}
				lv_positiveOutcome_16_0=ruleDatasetPositiveOutcome
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetRule());
					}
					set(
						$current,
						"positiveOutcome",
						lv_positiveOutcome_16_0,
						"org.xtext.example.modness.Modness.DatasetPositiveOutcome");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_17='datasetSentiveVariable'
		{
			newLeafNode(otherlv_17, grammarAccess.getDatasetAccess().getDatasetSentiveVariableKeyword_10());
		}
		otherlv_18='{'
		{
			newLeafNode(otherlv_18, grammarAccess.getDatasetAccess().getLeftCurlyBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetAccess().getDatasetSentiveVariableDatasetSensitiveVariableParserRuleCall_12_0());
				}
				lv_datasetSentiveVariable_19_0=ruleDatasetSensitiveVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetRule());
					}
					add(
						$current,
						"datasetSentiveVariable",
						lv_datasetSentiveVariable_19_0,
						"org.xtext.example.modness.Modness.DatasetSensitiveVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_20=','
			{
				newLeafNode(otherlv_20, grammarAccess.getDatasetAccess().getCommaKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDatasetAccess().getDatasetSentiveVariableDatasetSensitiveVariableParserRuleCall_13_1_0());
					}
					lv_datasetSentiveVariable_21_0=ruleDatasetSensitiveVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDatasetRule());
						}
						add(
							$current,
							"datasetSentiveVariable",
							lv_datasetSentiveVariable_21_0,
							"org.xtext.example.modness.Modness.DatasetSensitiveVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getDatasetAccess().getRightCurlyBracketKeyword_14());
		}
		otherlv_23='}'
		{
			newLeafNode(otherlv_23, grammarAccess.getDatasetAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleDatasetSensitiveGroup
entryRuleDatasetSensitiveGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatasetSensitiveGroupRule()); }
	iv_ruleDatasetSensitiveGroup=ruleDatasetSensitiveGroup
	{ $current=$iv_ruleDatasetSensitiveGroup.current; }
	EOF;

// Rule DatasetSensitiveGroup
ruleDatasetSensitiveGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DatasetSensitiveGroup'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatasetSensitiveGroupAccess().getDatasetSensitiveGroupKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetSensitiveGroupAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetSensitiveGroupRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDatasetSensitiveGroupAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='sensitiveVariables'
		{
			newLeafNode(otherlv_3, grammarAccess.getDatasetSensitiveGroupAccess().getSensitiveVariablesKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getDatasetSensitiveGroupAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatasetSensitiveGroupRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDatasetSensitiveGroupAccess().getSensitiveVariablesDatasetSensitiveVariableValueCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getDatasetSensitiveGroupAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDatasetSensitiveGroupRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDatasetSensitiveGroupAccess().getSensitiveVariablesDatasetSensitiveVariableValueCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getDatasetSensitiveGroupAccess().getRightParenthesisKeyword_7());
		}
		otherlv_9='mappingGroup'
		{
			newLeafNode(otherlv_9, grammarAccess.getDatasetSensitiveGroupAccess().getMappingGroupKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatasetSensitiveGroupRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDatasetSensitiveGroupAccess().getMappingGroupSensitiveGroupCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDatasetSensitiveGroupAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEFloatRule()); }
	iv_ruleEFloat=ruleEFloat
	{ $current=$iv_ruleEFloat.current.getText(); }
	EOF;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleSingleOperator
entryRuleSingleOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleOperatorRule()); }
	iv_ruleSingleOperator=ruleSingleOperator
	{ $current=$iv_ruleSingleOperator.current; }
	EOF;

// Rule SingleOperator
ruleSingleOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SingleOperator'
		{
			newLeafNode(otherlv_0, grammarAccess.getSingleOperatorAccess().getSingleOperatorKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSingleOperatorAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='operator'
		{
			newLeafNode(otherlv_2, grammarAccess.getSingleOperatorAccess().getOperatorKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleOperatorAccess().getOperatorSingleOperatorParameterEnumRuleCall_3_0());
				}
				lv_operator_3_0=ruleSingleOperatorParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleOperatorRule());
					}
					set(
						$current,
						"operator",
						lv_operator_3_0,
						"org.xtext.example.modness.Modness.SingleOperatorParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='value'
		{
			newLeafNode(otherlv_4, grammarAccess.getSingleOperatorAccess().getValueKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleOperatorAccess().getValueEFloatParserRuleCall_5_0());
				}
				lv_value_5_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleOperatorRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"org.xtext.example.modness.Modness.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSingleOperatorAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRangeOperator
entryRuleRangeOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeOperatorRule()); }
	iv_ruleRangeOperator=ruleRangeOperator
	{ $current=$iv_ruleRangeOperator.current; }
	EOF;

// Rule RangeOperator
ruleRangeOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RangeOperator'
		{
			newLeafNode(otherlv_0, grammarAccess.getRangeOperatorAccess().getRangeOperatorKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRangeOperatorAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='operator'
		{
			newLeafNode(otherlv_2, grammarAccess.getRangeOperatorAccess().getOperatorKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeOperatorAccess().getOperatorRangeOperatorParameterEnumRuleCall_3_0());
				}
				lv_operator_3_0=ruleRangeOperatorParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeOperatorRule());
					}
					set(
						$current,
						"operator",
						lv_operator_3_0,
						"org.xtext.example.modness.Modness.RangeOperatorParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='lowerValue'
		{
			newLeafNode(otherlv_4, grammarAccess.getRangeOperatorAccess().getLowerValueKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeOperatorAccess().getLowerValueEFloatParserRuleCall_5_0());
				}
				lv_lowerValue_5_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeOperatorRule());
					}
					set(
						$current,
						"lowerValue",
						lv_lowerValue_5_0,
						"org.xtext.example.modness.Modness.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='greaterValue'
		{
			newLeafNode(otherlv_6, grammarAccess.getRangeOperatorAccess().getGreaterValueKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeOperatorAccess().getGreaterValueEFloatParserRuleCall_7_0());
				}
				lv_greaterValue_7_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeOperatorRule());
					}
					set(
						$current,
						"greaterValue",
						lv_greaterValue_7_0,
						"org.xtext.example.modness.Modness.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getRangeOperatorAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Operation'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationAccess().getOperationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='equalityOperator'
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationAccess().getEqualityOperatorKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getEqualityOperatorArithmeticOperatorEnumRuleCall_4_0());
				}
				lv_equalityOperator_4_0=ruleArithmeticOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"equalityOperator",
						lv_equalityOperator_4_0,
						"org.xtext.example.modness.Modness.ArithmeticOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='leftSide'
		{
			newLeafNode(otherlv_5, grammarAccess.getOperationAccess().getLeftSideKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getLeftSideOperatorComponentParserRuleCall_6_0());
				}
				lv_leftSide_6_0=ruleOperatorComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"leftSide",
						lv_leftSide_6_0,
						"org.xtext.example.modness.Modness.OperatorComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='rightSide'
		{
			newLeafNode(otherlv_7, grammarAccess.getOperationAccess().getRightSideKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getRightSideOperatorComponentParserRuleCall_8_0());
				}
				lv_rightSide_8_0=ruleOperatorComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"rightSide",
						lv_rightSide_8_0,
						"org.xtext.example.modness.Modness.OperatorComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleProbability
entryRuleProbability returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProbabilityRule()); }
	iv_ruleProbability=ruleProbability
	{ $current=$iv_ruleProbability.current; }
	EOF;

// Rule Probability
ruleProbability returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Probability'
		{
			newLeafNode(otherlv_0, grammarAccess.getProbabilityAccess().getProbabilityKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProbabilityAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProbabilityRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProbabilityAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='object'
		{
			newLeafNode(otherlv_3, grammarAccess.getProbabilityAccess().getObjectKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProbabilityAccess().getObjectLogicalConditionParserRuleCall_4_0());
				}
				lv_object_4_0=ruleLogicalCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProbabilityRule());
					}
					set(
						$current,
						"object",
						lv_object_4_0,
						"org.xtext.example.modness.Modness.LogicalCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='condition'
			{
				newLeafNode(otherlv_5, grammarAccess.getProbabilityAccess().getConditionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProbabilityAccess().getConditionLogicalConditionParserRuleCall_5_1_0());
					}
					lv_condition_6_0=ruleLogicalCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProbabilityRule());
						}
						set(
							$current,
							"condition",
							lv_condition_6_0,
							"org.xtext.example.modness.Modness.LogicalCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getProbabilityAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleExpectedValue
entryRuleExpectedValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpectedValueRule()); }
	iv_ruleExpectedValue=ruleExpectedValue
	{ $current=$iv_ruleExpectedValue.current; }
	EOF;

// Rule ExpectedValue
ruleExpectedValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExpectedValue'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpectedValueAccess().getExpectedValueKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpectedValueAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpectedValueRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getExpectedValueAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='columnName'
		{
			newLeafNode(otherlv_3, grammarAccess.getExpectedValueAccess().getColumnNameKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpectedValueAccess().getColumnNameEStringParserRuleCall_4_0());
				}
				lv_columnName_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpectedValueRule());
					}
					set(
						$current,
						"columnName",
						lv_columnName_4_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='condition'
			{
				newLeafNode(otherlv_5, grammarAccess.getExpectedValueAccess().getConditionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpectedValueAccess().getConditionLogicalConditionParserRuleCall_5_1_0());
					}
					lv_condition_6_0=ruleLogicalCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpectedValueRule());
						}
						set(
							$current,
							"condition",
							lv_condition_6_0,
							"org.xtext.example.modness.Modness.LogicalCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getExpectedValueAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleGroupSize
entryRuleGroupSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupSizeRule()); }
	iv_ruleGroupSize=ruleGroupSize
	{ $current=$iv_ruleGroupSize.current; }
	EOF;

// Rule GroupSize
ruleGroupSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGroupSizeAccess().getGroupSizeAction_0(),
					$current);
			}
		)
		otherlv_1='GroupSize'
		{
			newLeafNode(otherlv_1, grammarAccess.getGroupSizeAccess().getGroupSizeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupSizeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupSizeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getGroupSizeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='variable'
			{
				newLeafNode(otherlv_4, grammarAccess.getGroupSizeAccess().getVariableKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupSizeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getGroupSizeAccess().getVariableVariableCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='groupCondition'
			{
				newLeafNode(otherlv_6, grammarAccess.getGroupSizeAccess().getGroupConditionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupSizeAccess().getGroupConditionLogicalConditionParserRuleCall_5_1_0());
					}
					lv_groupCondition_7_0=ruleLogicalCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupSizeRule());
						}
						set(
							$current,
							"groupCondition",
							lv_groupCondition_7_0,
							"org.xtext.example.modness.Modness.LogicalCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getGroupSizeAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDatasetSize
entryRuleDatasetSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatasetSizeRule()); }
	iv_ruleDatasetSize=ruleDatasetSize
	{ $current=$iv_ruleDatasetSize.current; }
	EOF;

// Rule DatasetSize
ruleDatasetSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDatasetSizeAccess().getDatasetSizeAction_0(),
					$current);
			}
		)
		otherlv_1='DatasetSize'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatasetSizeAccess().getDatasetSizeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetSizeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetSizeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLogaritm
entryRuleLogaritm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogaritmRule()); }
	iv_ruleLogaritm=ruleLogaritm
	{ $current=$iv_ruleLogaritm.current; }
	EOF;

// Rule Logaritm
ruleLogaritm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Logaritm'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogaritmAccess().getLogaritmKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogaritmAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogaritmRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLogaritmAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='operatorcomponent'
		{
			newLeafNode(otherlv_3, grammarAccess.getLogaritmAccess().getOperatorcomponentKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogaritmAccess().getOperatorcomponentOperatorComponentParserRuleCall_4_0());
				}
				lv_operatorcomponent_4_0=ruleOperatorComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogaritmRule());
					}
					set(
						$current,
						"operatorcomponent",
						lv_operatorcomponent_4_0,
						"org.xtext.example.modness.Modness.OperatorComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getLogaritmAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSummation
entryRuleSummation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSummationRule()); }
	iv_ruleSummation=ruleSummation
	{ $current=$iv_ruleSummation.current; }
	EOF;

// Rule Summation
ruleSummation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Summation'
		{
			newLeafNode(otherlv_0, grammarAccess.getSummationAccess().getSummationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSummationAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSummationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSummationAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='startRange'
		{
			newLeafNode(otherlv_3, grammarAccess.getSummationAccess().getStartRangeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSummationAccess().getStartRangeOperatorComponentParserRuleCall_4_0());
				}
				lv_startRange_4_0=ruleOperatorComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSummationRule());
					}
					set(
						$current,
						"startRange",
						lv_startRange_4_0,
						"org.xtext.example.modness.Modness.OperatorComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='endRange'
		{
			newLeafNode(otherlv_5, grammarAccess.getSummationAccess().getEndRangeKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSummationAccess().getEndRangeOperatorComponentParserRuleCall_6_0());
				}
				lv_endRange_6_0=ruleOperatorComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSummationRule());
					}
					set(
						$current,
						"endRange",
						lv_endRange_6_0,
						"org.xtext.example.modness.Modness.OperatorComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='body'
		{
			newLeafNode(otherlv_7, grammarAccess.getSummationAccess().getBodyKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSummationAccess().getBodyOperatorComponentParserRuleCall_8_0());
				}
				lv_body_8_0=ruleOperatorComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSummationRule());
					}
					set(
						$current,
						"body",
						lv_body_8_0,
						"org.xtext.example.modness.Modness.OperatorComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSummationAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleExistingGroupFairnessMetric
entryRuleExistingGroupFairnessMetric returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistingGroupFairnessMetricRule()); }
	iv_ruleExistingGroupFairnessMetric=ruleExistingGroupFairnessMetric
	{ $current=$iv_ruleExistingGroupFairnessMetric.current; }
	EOF;

// Rule ExistingGroupFairnessMetric
ruleExistingGroupFairnessMetric returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExistingGroupFairnessMetric'
		{
			newLeafNode(otherlv_0, grammarAccess.getExistingGroupFairnessMetricAccess().getExistingGroupFairnessMetricKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistingGroupFairnessMetricAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistingGroupFairnessMetricRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getExistingGroupFairnessMetricAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='metric'
		{
			newLeafNode(otherlv_3, grammarAccess.getExistingGroupFairnessMetricAccess().getMetricKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistingGroupFairnessMetricAccess().getMetricGroupFairnessMetricEnumRuleCall_4_0());
				}
				lv_metric_4_0=ruleGroupFairnessMetric
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistingGroupFairnessMetricRule());
					}
					set(
						$current,
						"metric",
						lv_metric_4_0,
						"org.xtext.example.modness.Modness.GroupFairnessMetric");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getExistingGroupFairnessMetricAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleExistingIndividualFairnessMetric
entryRuleExistingIndividualFairnessMetric returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistingIndividualFairnessMetricRule()); }
	iv_ruleExistingIndividualFairnessMetric=ruleExistingIndividualFairnessMetric
	{ $current=$iv_ruleExistingIndividualFairnessMetric.current; }
	EOF;

// Rule ExistingIndividualFairnessMetric
ruleExistingIndividualFairnessMetric returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExistingIndividualFairnessMetric'
		{
			newLeafNode(otherlv_0, grammarAccess.getExistingIndividualFairnessMetricAccess().getExistingIndividualFairnessMetricKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistingIndividualFairnessMetricAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistingIndividualFairnessMetricRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getExistingIndividualFairnessMetricAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='metric'
		{
			newLeafNode(otherlv_3, grammarAccess.getExistingIndividualFairnessMetricAccess().getMetricKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistingIndividualFairnessMetricAccess().getMetricIndividualFairnessMetricEnumRuleCall_4_0());
				}
				lv_metric_4_0=ruleIndividualFairnessMetric
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistingIndividualFairnessMetricRule());
					}
					set(
						$current,
						"metric",
						lv_metric_4_0,
						"org.xtext.example.modness.Modness.IndividualFairnessMetric");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getExistingIndividualFairnessMetricAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleOperatorComponent
entryRuleOperatorComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperatorComponentRule()); }
	iv_ruleOperatorComponent=ruleOperatorComponent
	{ $current=$iv_ruleOperatorComponent.current; }
	EOF;

// Rule OperatorComponent
ruleOperatorComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOperatorComponentAccess().getOperatorComponentAction_0(),
					$current);
			}
		)
		otherlv_1='OperatorComponent'
		{
			newLeafNode(otherlv_1, grammarAccess.getOperatorComponentAccess().getOperatorComponentKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperatorComponentAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperatorComponentRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getOperatorComponentAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='function'
			{
				newLeafNode(otherlv_4, grammarAccess.getOperatorComponentAccess().getFunctionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperatorComponentAccess().getFunctionFunctionParserRuleCall_4_1_0());
					}
					lv_function_5_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperatorComponentRule());
						}
						set(
							$current,
							"function",
							lv_function_5_0,
							"org.xtext.example.modness.Modness.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='operationvalue'
			{
				newLeafNode(otherlv_6, grammarAccess.getOperatorComponentAccess().getOperationvalueKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperatorComponentAccess().getOperationvalueOperationValueParserRuleCall_5_1_0());
					}
					lv_operationvalue_7_0=ruleOperationValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperatorComponentRule());
						}
						set(
							$current,
							"operationvalue",
							lv_operationvalue_7_0,
							"org.xtext.example.modness.Modness.OperationValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getOperatorComponentAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleOperationValue
entryRuleOperationValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationValueRule()); }
	iv_ruleOperationValue=ruleOperationValue
	{ $current=$iv_ruleOperationValue.current; }
	EOF;

// Rule OperationValue
ruleOperationValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OperationValue'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationValueAccess().getOperationValueKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationValueAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='value'
		{
			newLeafNode(otherlv_2, grammarAccess.getOperationValueAccess().getValueKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationValueAccess().getValueEFloatParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationValueRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.modness.Modness.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getOperationValueAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleLogicalCondition
entryRuleLogicalCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalConditionRule()); }
	iv_ruleLogicalCondition=ruleLogicalCondition
	{ $current=$iv_ruleLogicalCondition.current; }
	EOF;

// Rule LogicalCondition
ruleLogicalCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLogicalConditionAccess().getLogicalConditionAction_0(),
					$current);
			}
		)
		otherlv_1='LogicalCondition'
		{
			newLeafNode(otherlv_1, grammarAccess.getLogicalConditionAccess().getLogicalConditionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicalConditionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicalConditionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLogicalConditionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='value'
			{
				newLeafNode(otherlv_4, grammarAccess.getLogicalConditionAccess().getValueKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLogicalConditionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLogicalConditionAccess().getValueVariableValueCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='sensitivegroup'
			{
				newLeafNode(otherlv_6, grammarAccess.getLogicalConditionAccess().getSensitivegroupKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLogicalConditionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLogicalConditionAccess().getSensitivegroupDatasetSensitiveGroupCrossReference_5_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='sublogicalcondition'
			{
				newLeafNode(otherlv_8, grammarAccess.getLogicalConditionAccess().getSublogicalconditionKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalConditionAccess().getSublogicalconditionSubLogicalConditionParserRuleCall_6_1_0());
					}
					lv_sublogicalcondition_9_0=ruleSubLogicalCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalConditionRule());
						}
						set(
							$current,
							"sublogicalcondition",
							lv_sublogicalcondition_9_0,
							"org.xtext.example.modness.Modness.SubLogicalCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getLogicalConditionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSubLogicalCondition
entryRuleSubLogicalCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubLogicalConditionRule()); }
	iv_ruleSubLogicalCondition=ruleSubLogicalCondition
	{ $current=$iv_ruleSubLogicalCondition.current; }
	EOF;

// Rule SubLogicalCondition
ruleSubLogicalCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SubLogicalCondition'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubLogicalConditionAccess().getSubLogicalConditionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubLogicalConditionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubLogicalConditionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSubLogicalConditionAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='logicalOperator'
		{
			newLeafNode(otherlv_3, grammarAccess.getSubLogicalConditionAccess().getLogicalOperatorKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubLogicalConditionAccess().getLogicalOperatorLogicalOperatorEnumRuleCall_4_0());
				}
				lv_logicalOperator_4_0=ruleLogicalOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubLogicalConditionRule());
					}
					set(
						$current,
						"logicalOperator",
						lv_logicalOperator_4_0,
						"org.xtext.example.modness.Modness.LogicalOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='logicalcondition'
		{
			newLeafNode(otherlv_5, grammarAccess.getSubLogicalConditionAccess().getLogicalconditionKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubLogicalConditionAccess().getLogicalconditionLogicalConditionParserRuleCall_6_0());
				}
				lv_logicalcondition_6_0=ruleLogicalCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubLogicalConditionRule());
					}
					set(
						$current,
						"logicalcondition",
						lv_logicalcondition_6_0,
						"org.xtext.example.modness.Modness.LogicalCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSubLogicalConditionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleVariableValue_Impl
entryRuleVariableValue_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableValue_ImplRule()); }
	iv_ruleVariableValue_Impl=ruleVariableValue_Impl
	{ $current=$iv_ruleVariableValue_Impl.current; }
	EOF;

// Rule VariableValue_Impl
ruleVariableValue_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_relativeToDatasetSize_0_0='relativeToDatasetSize'
				{
					newLeafNode(lv_relativeToDatasetSize_0_0, grammarAccess.getVariableValue_ImplAccess().getRelativeToDatasetSizeRelativeToDatasetSizeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableValue_ImplRule());
					}
					setWithLastConsumed($current, "relativeToDatasetSize", lv_relativeToDatasetSize_0_0 != null, "relativeToDatasetSize");
				}
			)
		)?
		otherlv_1='VariableValue'
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableValue_ImplAccess().getVariableValueKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValue_ImplAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValue_ImplRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getVariableValue_ImplAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='operator'
		{
			newLeafNode(otherlv_4, grammarAccess.getVariableValue_ImplAccess().getOperatorKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValue_ImplAccess().getOperatorEqualityOperatorParserRuleCall_5_0());
				}
				lv_operator_5_0=ruleEqualityOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValue_ImplRule());
					}
					set(
						$current,
						"operator",
						lv_operator_5_0,
						"org.xtext.example.modness.Modness.EqualityOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getVariableValue_ImplAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDatasetPositiveOutcome
entryRuleDatasetPositiveOutcome returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatasetPositiveOutcomeRule()); }
	iv_ruleDatasetPositiveOutcome=ruleDatasetPositiveOutcome
	{ $current=$iv_ruleDatasetPositiveOutcome.current; }
	EOF;

// Rule DatasetPositiveOutcome
ruleDatasetPositiveOutcome returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_relativeToDatasetSize_0_0='relativeToDatasetSize'
				{
					newLeafNode(lv_relativeToDatasetSize_0_0, grammarAccess.getDatasetPositiveOutcomeAccess().getRelativeToDatasetSizeRelativeToDatasetSizeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatasetPositiveOutcomeRule());
					}
					setWithLastConsumed($current, "relativeToDatasetSize", lv_relativeToDatasetSize_0_0 != null, "relativeToDatasetSize");
				}
			)
		)?
		otherlv_1='DatasetPositiveOutcome'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatasetPositiveOutcomeAccess().getDatasetPositiveOutcomeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetPositiveOutcomeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetPositiveOutcomeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDatasetPositiveOutcomeAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='mappingPositiveOutcome'
		{
			newLeafNode(otherlv_4, grammarAccess.getDatasetPositiveOutcomeAccess().getMappingPositiveOutcomeKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatasetPositiveOutcomeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDatasetPositiveOutcomeAccess().getMappingPositiveOutcomePositiveOutcomeCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='operator'
		{
			newLeafNode(otherlv_6, grammarAccess.getDatasetPositiveOutcomeAccess().getOperatorKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetPositiveOutcomeAccess().getOperatorEqualityOperatorParserRuleCall_7_0());
				}
				lv_operator_7_0=ruleEqualityOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetPositiveOutcomeRule());
					}
					set(
						$current,
						"operator",
						lv_operator_7_0,
						"org.xtext.example.modness.Modness.EqualityOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDatasetPositiveOutcomeAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleDatasetSensitiveVariableValue
entryRuleDatasetSensitiveVariableValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatasetSensitiveVariableValueRule()); }
	iv_ruleDatasetSensitiveVariableValue=ruleDatasetSensitiveVariableValue
	{ $current=$iv_ruleDatasetSensitiveVariableValue.current; }
	EOF;

// Rule DatasetSensitiveVariableValue
ruleDatasetSensitiveVariableValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_relativeToDatasetSize_0_0='relativeToDatasetSize'
				{
					newLeafNode(lv_relativeToDatasetSize_0_0, grammarAccess.getDatasetSensitiveVariableValueAccess().getRelativeToDatasetSizeRelativeToDatasetSizeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatasetSensitiveVariableValueRule());
					}
					setWithLastConsumed($current, "relativeToDatasetSize", lv_relativeToDatasetSize_0_0 != null, "relativeToDatasetSize");
				}
			)
		)?
		otherlv_1='DatasetSensitiveVariableValue'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatasetSensitiveVariableValueAccess().getDatasetSensitiveVariableValueKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetSensitiveVariableValueAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetSensitiveVariableValueRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDatasetSensitiveVariableValueAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='mappingValue'
		{
			newLeafNode(otherlv_4, grammarAccess.getDatasetSensitiveVariableValueAccess().getMappingValueKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatasetSensitiveVariableValueRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDatasetSensitiveVariableValueAccess().getMappingValueSensitiveVariableValueCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='operator'
		{
			newLeafNode(otherlv_6, grammarAccess.getDatasetSensitiveVariableValueAccess().getOperatorKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetSensitiveVariableValueAccess().getOperatorEqualityOperatorParserRuleCall_7_0());
				}
				lv_operator_7_0=ruleEqualityOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetSensitiveVariableValueRule());
					}
					set(
						$current,
						"operator",
						lv_operator_7_0,
						"org.xtext.example.modness.Modness.EqualityOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDatasetSensitiveVariableValueAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleOtherVariable
entryRuleOtherVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOtherVariableRule()); }
	iv_ruleOtherVariable=ruleOtherVariable
	{ $current=$iv_ruleOtherVariable.current; }
	EOF;

// Rule OtherVariable
ruleOtherVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOtherVariableAccess().getOtherVariableAction_0(),
					$current);
			}
		)
		otherlv_1='OtherVariable'
		{
			newLeafNode(otherlv_1, grammarAccess.getOtherVariableAccess().getOtherVariableKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOtherVariableAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOtherVariableRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getOtherVariableAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='othervariablevalue'
			{
				newLeafNode(otherlv_4, grammarAccess.getOtherVariableAccess().getOthervariablevalueKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getOtherVariableAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOtherVariableAccess().getOthervariablevalueVariableValueParserRuleCall_4_2_0());
					}
					lv_othervariablevalue_6_0=ruleVariableValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOtherVariableRule());
						}
						add(
							$current,
							"othervariablevalue",
							lv_othervariablevalue_6_0,
							"org.xtext.example.modness.Modness.VariableValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getOtherVariableAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOtherVariableAccess().getOthervariablevalueVariableValueParserRuleCall_4_3_1_0());
						}
						lv_othervariablevalue_8_0=ruleVariableValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOtherVariableRule());
							}
							add(
								$current,
								"othervariablevalue",
								lv_othervariablevalue_8_0,
								"org.xtext.example.modness.Modness.VariableValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getOtherVariableAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getOtherVariableAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDatasetSensitiveVariable
entryRuleDatasetSensitiveVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatasetSensitiveVariableRule()); }
	iv_ruleDatasetSensitiveVariable=ruleDatasetSensitiveVariable
	{ $current=$iv_ruleDatasetSensitiveVariable.current; }
	EOF;

// Rule DatasetSensitiveVariable
ruleDatasetSensitiveVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DatasetSensitiveVariable'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatasetSensitiveVariableAccess().getDatasetSensitiveVariableKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetSensitiveVariableAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetSensitiveVariableRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.modness.Modness.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDatasetSensitiveVariableAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='mappingSensitiveVariable'
		{
			newLeafNode(otherlv_3, grammarAccess.getDatasetSensitiveVariableAccess().getMappingSensitiveVariableKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatasetSensitiveVariableRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDatasetSensitiveVariableAccess().getMappingSensitiveVariableSensitiveVariableCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='datasetsensitivevariablevalue'
		{
			newLeafNode(otherlv_5, grammarAccess.getDatasetSensitiveVariableAccess().getDatasetsensitivevariablevalueKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getDatasetSensitiveVariableAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatasetSensitiveVariableAccess().getDatasetsensitivevariablevalueDatasetSensitiveVariableValueParserRuleCall_7_0());
				}
				lv_datasetsensitivevariablevalue_7_0=ruleDatasetSensitiveVariableValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatasetSensitiveVariableRule());
					}
					add(
						$current,
						"datasetsensitivevariablevalue",
						lv_datasetsensitivevariablevalue_7_0,
						"org.xtext.example.modness.Modness.DatasetSensitiveVariableValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getDatasetSensitiveVariableAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDatasetSensitiveVariableAccess().getDatasetsensitivevariablevalueDatasetSensitiveVariableValueParserRuleCall_8_1_0());
					}
					lv_datasetsensitivevariablevalue_9_0=ruleDatasetSensitiveVariableValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDatasetSensitiveVariableRule());
						}
						add(
							$current,
							"datasetsensitivevariablevalue",
							lv_datasetsensitivevariablevalue_9_0,
							"org.xtext.example.modness.Modness.DatasetSensitiveVariableValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDatasetSensitiveVariableAccess().getRightCurlyBracketKeyword_9());
		}
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDatasetSensitiveVariableAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Rule BiasSource
ruleBiasSource returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='WRONG_ALGORITHM_BEHAVIOUR'
			{
				$current = grammarAccess.getBiasSourceAccess().getWRONG_ALGORITHM_BEHAVIOUREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBiasSourceAccess().getWRONG_ALGORITHM_BEHAVIOUREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='HUMAN_DISCRIMINATION'
			{
				$current = grammarAccess.getBiasSourceAccess().getHUMAN_DISCRIMINATIONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBiasSourceAccess().getHUMAN_DISCRIMINATIONEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='WRONG_MEASUREMENT'
			{
				$current = grammarAccess.getBiasSourceAccess().getWRONG_MEASUREMENTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBiasSourceAccess().getWRONG_MEASUREMENTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='OMITTED_VARIABLE'
			{
				$current = grammarAccess.getBiasSourceAccess().getOMITTED_VARIABLEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBiasSourceAccess().getOMITTED_VARIABLEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='WRONG_SAMPLING'
			{
				$current = grammarAccess.getBiasSourceAccess().getWRONG_SAMPLINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBiasSourceAccess().getWRONG_SAMPLINGEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='WRONG_AGGREGATION'
			{
				$current = grammarAccess.getBiasSourceAccess().getWRONG_AGGREGATIONEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getBiasSourceAccess().getWRONG_AGGREGATIONEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='WRONG_LINKING'
			{
				$current = grammarAccess.getBiasSourceAccess().getWRONG_LINKINGEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getBiasSourceAccess().getWRONG_LINKINGEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='WRONG_PRESENTATION'
			{
				$current = grammarAccess.getBiasSourceAccess().getWRONG_PRESENTATIONEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getBiasSourceAccess().getWRONG_PRESENTATIONEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='RESULT_RANKING'
			{
				$current = grammarAccess.getBiasSourceAccess().getRESULT_RANKINGEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getBiasSourceAccess().getRESULT_RANKINGEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='WRONG_SYSTEM_EVALUATION'
			{
				$current = grammarAccess.getBiasSourceAccess().getWRONG_SYSTEM_EVALUATIONEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getBiasSourceAccess().getWRONG_SYSTEM_EVALUATIONEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='WRONG_SYSTEM_TARGET_POPULATION'
			{
				$current = grammarAccess.getBiasSourceAccess().getWRONG_SYSTEM_TARGET_POPULATIONEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getBiasSourceAccess().getWRONG_SYSTEM_TARGET_POPULATIONEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='CHANGE_IN_TARGET_POPULATION'
			{
				$current = grammarAccess.getBiasSourceAccess().getCHANGE_IN_TARGET_POPULATIONEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getBiasSourceAccess().getCHANGE_IN_TARGET_POPULATIONEnumLiteralDeclaration_11());
			}
		)
	)
;

// Rule SingleOperatorParameter
ruleSingleOperatorParameter returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='EQUAL'
			{
				$current = grammarAccess.getSingleOperatorParameterAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSingleOperatorParameterAccess().getEQUALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='GREATER'
			{
				$current = grammarAccess.getSingleOperatorParameterAccess().getGREATEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSingleOperatorParameterAccess().getGREATEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MINOR'
			{
				$current = grammarAccess.getSingleOperatorParameterAccess().getMINOREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSingleOperatorParameterAccess().getMINOREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='GREATER_EQUAL'
			{
				$current = grammarAccess.getSingleOperatorParameterAccess().getGREATER_EQUALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSingleOperatorParameterAccess().getGREATER_EQUALEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='MINOR_EQUAL'
			{
				$current = grammarAccess.getSingleOperatorParameterAccess().getMINOR_EQUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getSingleOperatorParameterAccess().getMINOR_EQUALEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='NOT_EQUAL'
			{
				$current = grammarAccess.getSingleOperatorParameterAccess().getNOT_EQUALEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getSingleOperatorParameterAccess().getNOT_EQUALEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule RangeOperatorParameter
ruleRangeOperatorParameter returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='IN_INCLUDED'
			{
				$current = grammarAccess.getRangeOperatorParameterAccess().getIN_INCLUDEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRangeOperatorParameterAccess().getIN_INCLUDEDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='IN_EXCLUDED'
			{
				$current = grammarAccess.getRangeOperatorParameterAccess().getIN_EXCLUDEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRangeOperatorParameterAccess().getIN_EXCLUDEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='IN_LOWER_INCLUDED'
			{
				$current = grammarAccess.getRangeOperatorParameterAccess().getIN_LOWER_INCLUDEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRangeOperatorParameterAccess().getIN_LOWER_INCLUDEDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='IN_GREATER_INCLUDED'
			{
				$current = grammarAccess.getRangeOperatorParameterAccess().getIN_GREATER_INCLUDEDEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRangeOperatorParameterAccess().getIN_GREATER_INCLUDEDEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule ArithmeticOperator
ruleArithmeticOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='SUM'
			{
				$current = grammarAccess.getArithmeticOperatorAccess().getSUMEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getArithmeticOperatorAccess().getSUMEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DIFFERENCE'
			{
				$current = grammarAccess.getArithmeticOperatorAccess().getDIFFERENCEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getArithmeticOperatorAccess().getDIFFERENCEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MULTIPLICATION'
			{
				$current = grammarAccess.getArithmeticOperatorAccess().getMULTIPLICATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getArithmeticOperatorAccess().getMULTIPLICATIONEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='RATIO'
			{
				$current = grammarAccess.getArithmeticOperatorAccess().getRATIOEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getArithmeticOperatorAccess().getRATIOEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule LogicalOperator
ruleLogicalOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AND'
			{
				$current = grammarAccess.getLogicalOperatorAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLogicalOperatorAccess().getANDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='OR'
			{
				$current = grammarAccess.getLogicalOperatorAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLogicalOperatorAccess().getOREnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule GroupFairnessMetric
ruleGroupFairnessMetric returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='STATISTICAL_PARITY'
			{
				$current = grammarAccess.getGroupFairnessMetricAccess().getSTATISTICAL_PARITYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getGroupFairnessMetricAccess().getSTATISTICAL_PARITYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DISPARATE_IMPACT'
			{
				$current = grammarAccess.getGroupFairnessMetricAccess().getDISPARATE_IMPACTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getGroupFairnessMetricAccess().getDISPARATE_IMPACTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='EQUALIZED_ODDS'
			{
				$current = grammarAccess.getGroupFairnessMetricAccess().getEQUALIZED_ODDSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getGroupFairnessMetricAccess().getEQUALIZED_ODDSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='EQUAL_ACCURACY'
			{
				$current = grammarAccess.getGroupFairnessMetricAccess().getEQUAL_ACCURACYEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getGroupFairnessMetricAccess().getEQUAL_ACCURACYEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='FALSE_POSITIVE_DIFFERENCE'
			{
				$current = grammarAccess.getGroupFairnessMetricAccess().getFALSE_POSITIVE_DIFFERENCEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getGroupFairnessMetricAccess().getFALSE_POSITIVE_DIFFERENCEEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='TRUE_POSITIVE_DIFFERENCE'
			{
				$current = grammarAccess.getGroupFairnessMetricAccess().getTRUE_POSITIVE_DIFFERENCEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getGroupFairnessMetricAccess().getTRUE_POSITIVE_DIFFERENCEEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule IndividualFairnessMetric
ruleIndividualFairnessMetric returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MANHATTAN_DISTANCE'
			{
				$current = grammarAccess.getIndividualFairnessMetricAccess().getMANHATTAN_DISTANCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIndividualFairnessMetricAccess().getMANHATTAN_DISTANCEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='EUCLIDEAN_DISTANCE'
			{
				$current = grammarAccess.getIndividualFairnessMetricAccess().getEUCLIDEAN_DISTANCEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIndividualFairnessMetricAccess().getEUCLIDEAN_DISTANCEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MAHALANOBIS_DISTANCE'
			{
				$current = grammarAccess.getIndividualFairnessMetricAccess().getMAHALANOBIS_DISTANCEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getIndividualFairnessMetricAccess().getMAHALANOBIS_DISTANCEEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
